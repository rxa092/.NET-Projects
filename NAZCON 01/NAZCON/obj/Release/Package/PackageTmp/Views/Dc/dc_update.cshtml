@model NAZCON.Models.ViewModel.DcModel

@{
    ViewBag.Title = "dc_update";
}

<h2>Create Delivery Challan</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
       
        <div class="form-group">
            @Html.LabelFor(model => model.dono, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.dono, (SelectList)ViewBag.order, "Select Item", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.dono, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.truck, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.truck, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.truck, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        
        <div class="form-group">
            @Html.LabelFor(model => model.im.id, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.im.id, (SelectList)ViewBag.items, "Select Item", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.im.id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.no_of_pallets, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.no_of_pallets, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.no_of_pallets, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.remarks, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.remarks, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.remarks, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
                <input type="button" value="Finalize" class="btn btn-primary" onclick="@("window.location.href='"+Url.Action("show_all","Dc")+"'");" />
            </div>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "show_all")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
